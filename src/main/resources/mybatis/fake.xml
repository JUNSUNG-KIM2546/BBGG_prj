<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fake">
	<sql id="search">
		SELECT tf.*, tp.comp_name 
		FROM tbl_fake tf 
			LEFT JOIN tbl_item ti
				ON tf.item_no = ti.item_no
			LEFT JOIN tbl_partner tp
			ON ti.partner_no = tp.partner_no
		
		<where>
			<if test="search == 1">
				tp.comp_name LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			</if>
			
			<if test="search == 2">
				tf.item_no LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			</if>
			
			<if test="search == 3">
				tf.fake_content LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			</if>
			
			<if test="search == 4">
				tf.use_at LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			</if>
		</where>
		
		ORDER BY tf.fake_no DESC
	</sql>

	<select id="selectList" resultType="fakeVO">
		SELECT subquery.*
		FROM (SELECT tf.*, tp.comp_name, ROW_NUMBER() OVER (ORDER BY fake_no DESC) AS rownum
			FROM tbl_fake AS tf, tbl_item AS ti, tbl_partner AS tp
			WHERE tf.item_no = ti.item_no 
				AND ti.partner_no = tp.partner_no) AS subquery
		<where>
			<if test="search == 1">
				subquery.comp_name LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			</if>
			
			<if test="search == 2">
				subquery.item_no LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			</if>
			
			<if test="search == 3">
				subquery.fake_content LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			</if>
			
			<if test="search == 4">
				subquery.use_at LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			</if>
		</where>
		LIMIT ${perPage} OFFSET ${startPage}
	</select>
	
	<select id="total" resultType="Integer">
		SELECT COUNT(*) FROM (<include refid="search"></include>) as sub
	</select>

	<insert id="insert">
		INSERT INTO tbl_fake (
							item_no, 
							user_no, 
							fake_check1, 
							fake_check2, 
							fake_check3, 
							fake_content, 
							use_at, 
							agree_at,
							regist_date)
		VALUES (#{itemNo}, 
				(SELECT user_no 
				FROM tbl_user
				WHERE user_id = #{userId}
        		), 
				#{fakeVO.fakeCheck1}, 
				#{fakeVO.fakeCheck2}, 
				#{fakeVO.fakeCheck3}, 
				#{fakeVO.fakeContent}, 
				#{fakeVO.useAt}, 
				#{fakeVO.agreeAt},
				NOW()
				)
				<selectKey keyProperty="fakeNo" resultType="Long" order="AFTER">
					SELECT LAST_INSERT_ID()
				</selectKey>
	</insert>
	
	<insert id="insertFile">
		INSERT INTO tbl_fake_file (
								fake_no, 
								original_file_name,
								file_extension,
								unique_file_name,
								saved_file_name, 
								file_size, 	
								use_at)
		VALUES (
				(SELECT fake_no 
				FROM tbl_fake
				ORDER BY fake_no DESC
				LIMIT 1), 
				#{uploadVO.originalFileName}, 
				#{uploadVO.fileExtension}, 
				#{uploadVO.uniqueFileName}, 
				#{uploadVO.savedFileName}, 
				#{uploadVO.fileSize}, 
				#{uploadVO.useAt}
				)
	</insert>
	
	<update id="likeDeleteUpdate">
		UPDATE tbl_fake
	    SET use_at = 'Y'
	    WHERE item_no = #{itemNo}
	</update>

</mapper>